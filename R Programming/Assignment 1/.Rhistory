x <- 2
x
y <- c(3,5)
y
a  <- c(x,y)
a[1]
a[3]
a[4]
ls
asdasf
ls()
c
demo
demo()
demo(graphics)
source('~/Desktop/test.R')
source('~/Desktop/test.R')
source('~/Desktop/test.R')
source('~/Desktop/test.R')
source('~/Desktop/test.R')
source('~/Desktop/test.R', echo=TRUE)
source('~/Desktop/test.R', echo=TRUE)
source('~/Desktop/test.R', echo=TRUE)
#just a comment
z <- c(8,13,21)
2*z
#just a comment
z <- c(8,13,21)
2*z
fib <- c(1,1,2,3,5,z)
2*fib+1
fib*fib
log(fib)
fib
s <- 2*(1:3)
s
fib[3]
fib
fib[4:7]
fib[s]
fib[c(3,5)]
fib[-c(3,5)]
fib
fib[c(3,5)]
x <- c(1,-2,5,-4,0,3)
x
x > 0
x[x > 0]
a = x>0
x[a]
x
x[-a]
a
-a
--a
a*1
a+1
a <- seq(1,6,by=1)
a
a[c(1,3,5)]
a[-c(1,3,5)]
even(1)
iseven(1)
mod(3,1)
mode(3,1)
b = a>=3
b
a[b]
c = b[c(3:6)]
c
a
a[c]
c[2] = FALSE
c
d = 1
a
b
c
a[c]
4
y <- 5:8
mat1 <- cbind(x,y)
mat2 <-
x <- 1:4
x <- 1:4
y <- 5:8
x
y
mat1
rm
rm(all)
?rm
rm(list = ls())
x <- 1:4
y <- 5:8
mat1 <- cbind(x,y)
mat1
mat2 <- rbind(x,y,x+y)
mat2
mat[3,2]
mat2[3,2]
mat2[2,]
mat2[,1]
c0 <- read.table("ctest3.data")
help()
help(summary)
x  <- 1:5
x
class(x)
size(x)
length(x)
as.character(x)
m  <- matrix(nrow=2,ncol=2)
m
dim(m)
attributes(m)
m  <- matrix(1:6, nrow=2, ncol=2)
m
m  <- matrix(1:6, nrow=2, ncol=3)
m <- 1:10
m
dim(m) <- c(2,5)
m
cbind(x,y)
x  <- 1:3
y  <- 10:12
cbind(x,y)
rbind(x,y)
x <- list(1, "a", TRUE, 1+4i)
x
x <- factor(c("yes", "yes", "no", "yes", "no"))
x
table(x)
table(x) # frequency table
unclass(x)
levels = c("yes","no"))  # setting factor order (default: alphabetical)
x <- factor(c("yes", "yes", "no", "yes", "no"),
levels = c("yes","no"))  # setting factor order (default: alphabetical)
x
is.na()
x  <- data.frame(foo = 1:4, bar = c(T,T,F,F))
x
nrow(x)
ncol(x)
x <- 1:3
names(x)
names(x) <- c("foo", "bar", "norf")
x
x <- 1:3
x
names(x) <- c("foo", "bar", "norf")
x
x  <- list(a=1, b=2, c=3)
x
m <- matrix(1:4, nrow=2, ncol=2)
dimnames(m)  <- list(c("r1","r2"),c("c1","c2"))
m
x <- c("a", "b","c", "d","a")
x[1]
x[1:4]
x[x > a]
x[x > "a"]
u  <- x > "a"
u
x[u]
m <- matrix(1:6, 2, 3)
m
x[1,2]
m[1,2]
m[1,]
l <- list(foo=1:4, bar=0.6)
x
l
l[1]
l[[1]]
l$foo
l[["bar"]]
l["bar"]
class(l[1])    # returns class list
class(l[[1]])  # returns just numbers
l
l[[1]]
class(l[["bar"]])
class(l$foo)
class(l[["bar"]])
class(l["bar"])
class(1)
class(1:3)
class(0.5:1:3.5)
0.5:1:3.5
l <- list(foo=1:4, bar=0.6, baz="hello")
l[c(1,3)]
x <- c(1, 2, NA, 4, NA, 5)
bad
bad <- is.na(x)
bad
x[!bad]
x <- c(1,2,NA,4,NA,5)
y <- c("a","b",NA,"d",NA,"f")
good <- complete.cases(x,y)
good
y <- c("a","b",NA,"d",NA,NA)
good <- complete.cases(x,y)
good
help read.table
help(read.table)
clear
clc
clear
install.packages("swirl")
help(library)
help(read.table)
?library
library("swirl")
good
rm(list=ls())
swirl()
help.start()
5 + 4
5 + 7
nxt()
play()
afda
4*4
nxt()
info()
skip()
main()
main()
info()
bye()
install_from_swirl
install_from_swirl()
install_from_swirl("Data Analysis")
swirl()
bye()
getwd()
setwd("Desktop/Coursera R Programming/Quizzes and assignments/Assignment 1/")
getwd()
source('~/.active-rstudio-document')
cr <- corr("specdata", 150)
head(cr)
summary(cr)
?options
options(digits=6)
summary(cr)
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata/", 400)
head(cr)
summary(cr)
cr <- corr("specdata/", 5000)
length(cr)
cr <- corr("specdata/")
summary(cr)
length(cr)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
3
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
pollutantmean("specdata", "nitrate", 23)
submit()
source('~/Desktop/Coursera R Programming/Quizzes and assignments/Assignment 1/pollutantmean.R')
pollutantmean("specdata", "nitrate", 23)
pollutant = "nitrate"
pollutant <- "nitrate"
id <- 23
data_combined <- numeric(1) # poor man's initialization
counter <- 0
seq_along(id)
i<- 1
fname <- sprintf("%03d.csv",id[i])
data <- read.csv(file.path(directory, fname))
good <- !is.na(data[, pollutant])
directory <- "specdata"
data <- read.csv(file.path(directory, fname))
good <- !is.na(data[, pollutant])
sum(good)
(counter+1)
(counter+length(good_data))
good_data <- data[, pollutant][good]
counter+length(good_data))
counter+length(good_data)
(counter+1)
data_combined[(counter+1):(counter+length(good_data))] <- good_data
counter <- counter +length(good_data)
mean(data_combined)
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
submit()
submit()
a <- "bla"
b <- 5
print(c(a,b))
?fprints
?fprint
source('~/Desktop/Coursera R Programming/Quizzes and assignments/Assignment 1/pollutantmean.R')
submit()
head(data_combined)
fname
source('~/.active-rstudio-document')
source('~/Desktop/Coursera R Programming/Quizzes and assignments/Assignment 1/pollutantmean.R')
submit()
cube <- function(x, n) {
x^3
}
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
3L <- 12
clear()
x <- list(a=1:5, b = rnomrm(10))
x <- list(a=1:5, b = rnorm(10))
x
lapply(x, mean)
?runif
?runif
x <- list(a = matrix(1:4, 2 , 2), b = matrixII(16, 3, 2))
x <- list(a = matrix(1:4, 2 , 2), b = matrix(1:6, 3, 2))
x
lapply(x, function(y) yl[,1])
lapply(x, function(y) y[,1])
x <- matrix(rnorm(200), 20, 10)
x
apply(x, 2, mean)
rowmeans(x)
rowMeans(x)
?str
mapply(rep, 1:4, 4:1)
noise <- function(n, mean, sd) {
rnorm(n, mean, sd)
}
noise(5,1,2)
mapply(noise, 1:5, 1:5, 2)
m <- mapply(noise, 1:5, 1:5, 2)
class(m)
str(m)
summary(m)
?gl
x <- (rnorm(10), runif(10), rnorm(10,1))
x <- c(rnorm(10), runif(10), rnorm(10,1))
f <- gl(3,10)
f
class(f)
tapply(x, f, mean)
tapply(x, f, range)
options(digits=4)
tapply(x, f, range)
str(split)
x <- c(rnorm(10), runif(10), rnorm(10,1))
f <- gl(3,10)
split(x, f)
lapply(split(x, f), mean)
library(datasets)
head(airquality)
lapply(split(airquality$Temp, airquality$Month), mean)
s <- split(airquality, airquality$Month)
lapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")], na.rm=T))
sapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")], na.rm=T))
sapply(s, function(x) colMeans(x[, c("Temperature", Ozone", "Solar.R", "Wind")], na.rm=T))
sapply(s, function(x) colMeans(x[, c("Temp", Ozone", "Solar.R", "Wind")], na.rm=T))
sapply(s, function(x) colMeans(x[, c("T", Ozone", "Solar.R", "Wind")], na.rm=T))
sapply(s, function(x) colMeans(x[, c("Temperature", "Ozone", "Solar.R", "Wind")], na.rm=T))
sapply(s, function(x) colMeans(x[, c("Temp", "Ozone", "Solar.R", "Wind")], na.rm=T))
x <- rnorm(10)
f1 <- gl(2,5)
f2 <- gl(5,2)
interaction(f1, f2)
list(f1,f2)
str(split(x, list(f1,f2), drop=T))
log(-1)
library(datasets)
data(iris)
?iris
str(iris)
str(iris$Species)
iris$Species
?tapply
gl (3,10)
as.factor(iris$Species)
tapply(iris$Sepal.Length, iris$Species, mean)
options(digits = 10)
tapply(iris$Sepal.Length, iris$Species, mean)
apply(iris, 2, mean)
apply(iris, 1, mean)
str(iris)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
?mtcars
str(mtcars)
?tapply
tapply(mtcars$cyl, mtcars$mpg, mean)
apply(mtcars, 2, mean)
apply(mtcars, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
split(mtcars$mpg, mtcars$cyl)
tapply(mtcars$mpg, mtcars$cyl, mean)
str(mtcars)
tapply(mtcars$hp, mtcars$cyl, mean)
x <- tapply(mtcars$hp, mtcars$cyl, mean)
x
x$8 - x$4
x$8
x(3)
x(4)
x(name = 4)
x[name = 4]
x
class(x)
x[1]
x[2]
x[3]
x[3]-x[1]
?ls
debug(ls)
ls()
