bad
x[!bad]
x <- c(1,2,NA,4,NA,5)
y <- c("a","b",NA,"d",NA,"f")
good <- complete.cases(x,y)
good
y <- c("a","b",NA,"d",NA,NA)
good <- complete.cases(x,y)
good
help read.table
help(read.table)
clear
clc
clear
install.packages("swirl")
help(library)
help(read.table)
?library
library("swirl")
good
rm(list=ls())
swirl()
help.start()
5 + 4
5 + 7
nxt()
play()
afda
4*4
nxt()
info()
skip()
main()
main()
info()
bye()
install_from_swirl
install_from_swirl()
install_from_swirl("Data Analysis")
swirl()
bye()
_loc
?loc
x <- rnorm(100)
e <- rnorm(100,0,2)
y <- 0.5 + 2*x + e
str(y)
summary(y)
plot(x,y)
system.time({5+3})
?outer
?rpois
set.seed(1)
rpois(5,2)
rep(0:1, each = 5)
?gl
gl(2,1,5)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
plot(x,y)
?rbinom
?plot
library(datasets)
hist(airquality$Ozone)
with(airquality, plot(Wind,Ozone))
str(airquality)
?boxplot
head(airquality)
?transform
airquality <- transform(airquality, Month = factor(Month))
str(airquality)
boxplot(Ozone ~ Month, airquality)
boxplot(Ozone ~ Month, airquality, pch="a")
boxplot(Ozone ~ Month, airquality, lty="dashed")
boxplot(Ozone ~ Month, airquality, lwd=5)
boxplot(Ozone ~ Month, airquality, col="red")
colors()
par("lty")
par("bg")
?subset
Ozone
model <- lm(Ozone ~ Wind, airquality)
model
str(lm)
head(lm)
str(model)
head(model)
summary(model)
model
library(datasets)
library(lattice)
str(airquality)
xyplot(Ozone ~ Wind | Month, data=airquality, layout=c(5,1))
xyplot(Ozone ~ Wind | Month, data=airquality, layout=c(3,2))
xyplot(Ozone ~ Wind | Month, data=airquality, layout=c(2,3))
library(ggplot2)
library(ggplot2)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
str(BodyWeight)
library(datasets)
library(lattice)
## Convert 'Month' to a factor variable
airquality <- transform(airquality, Month = factor(Month)) xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5, 1))
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5, 1))
text("test")
?axis()
?text()
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5, 1))
text(5,10,"hello")
?axis()
?points()
?llines()
library(datasets)
data(airquality)
library(datasets)
data(airquality)
)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
install.packages("ggplot2")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library("ggplot2")
sessionInfo()
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(votes, rating, data = movies)
str(moveis)
str(movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + stats_smooth("loess")
getwd()
setwd("Desktop//Coursera Exploratory//assignments n quizzes//assignment 2")
dir()
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
str(SCC)
head(SCC)
SCC(1)
SCC[1]
SCC[,1]
SCC[1,1]
class(SCC)
size(SCC)
str(SCC)
?head
head(SSC,1)
head(SSC,n=1)
head(SCC,1)
head(SCC,2)
head(SCC,3)
str(NEI)
unique(NEI$Pollutant)
unique(NEI$year)
unique(NEI$type)
x <- c(rnorm(10),runif(10),rnorm(10,1))
x
f <- gl(3,10)
f
tapply(x,f,mean)
src(NEI)
str(NEI)
tapply(NEI$Emissions, NEI$year, sum)
total <- tapply(NEI$Emissions, NEI$year, sum)
total
src(total)
str(total)
plot(total)
barplot(total)
?barplot
barplot(total,
main="Total PM2.5 emission from all sources",
xlab="Year")
barplot(total/1000000,
main="Total PM2.5 emission from all sources",
xlab="Year")
barplot(total/10^6,
main="Total PM2.5 emission from all sources",
xlab="Year"
ylab="Million tons")
10^6
10e6
1e6
barplot(total/1e6,
main="Total PM2.5 emission from all sources",
xlab="Year"
ylab="Emission (mega tons)")
barplot(total/1e6,
main="Total PM2.5 emission from all sources",
xlab="Year",
ylab="Emission (mega tons)")
# Create plot
barplot(total/1e6,
main="Total PM2.5 emission from all sources",
xlab="Year",
ylab="Emission (mega tons)")
# Save plot as PNG
dev.copy(png, file = "plot1.png",
width = 480,
height = 480)
dev.off()
?subset
str(NEI)
NEI_baltimore <- subset(NEI, NEI$fips=="24510")
str(NEI_baltimore)
total <- tapply(NEI_baltimore$Emissions, NEI_baltimore$year, sum)
barplot(total/1e6,
main="Total PM2.5 emission in Baltimore City",
xlab="Year",
ylab="Emission (mega tons)")
# Save plot as PNG
dev.copy(png, file = "plot2.png",
width = 480,
height = 480)
dev.off()
install.packages(ggplot2)
install.packages("ggplot2")
ggplot2
library(ggplot2)
fac.combine
library(dae)
install.package(dae)
install.package("dae")
install.packages("dae")
library(dae)
fac.combine
typeyear <- fac.combine(list(NEI_baltimore$type, NEI_baltimore$year))
typeyear <- fac.combine(list(as.factor(NEI_baltimore$type), as.factor(NEI_baltimore$year)))
typeyear
unique(typeyear)
total <- tapply(NEI_baltimore$Emissions, typeyear, sum)
total
str(NEI)
types <- unique(NEI_baltimore$type)
types
?charachter
?character
?numeric
types <- unique(NEI_baltimore$type)
years <- unique(NEI_baltimore$year)
df <- data.frame(Emissions=numeric(), type=character(), year=character(),
stringsAsFactors=FALSE)
df
c <- 1
types
years
t <- types[1]
y <- years[1]
t
y
good <- (NEI_baltimore$type==t && NEI_baltimore$year==y)
str(good)
summary(good)
sum(good)
sum(NEI_baltimore$Emissions[good]
)
c <- 1
for (t in types){
for (y in years){
good <- (NEI_baltimore$type==t && NEI_baltimore$year==y)
df[c,1] <- sum(NEI_baltimore$Emissions[good])
df[c,2] <- t
df[c,3] <- y
df[c,4] <- sum(good)
c <- c+1
}
}
df
df <- data.frame(Emissions=numeric(), type=character(), year=character(),
samples=numeric()
stringsAsFactors=FALSE)
c <- 1
for (t in types){
for (y in years){
good <- (NEI_baltimore$type==t && NEI_baltimore$year==y)
df[c,1] <- sum(NEI_baltimore$Emissions[good])
df[c,2] <- t
df[c,3] <- y
df[c,4] <- sum(good)
c <- c+1
}
}
df
df <- data.frame(Emissions=numeric(), type=character(), year=character(),
samples=numeric(), stringsAsFactors=FALSE)
c <- 1
for (t in types){
for (y in years){
good <- (NEI_baltimore$type==t && NEI_baltimore$year==y)
df[c,1] <- sum(NEI_baltimore$Emissions[good])
df[c,2] <- t
df[c,3] <- y
df[c,4] <- sum(good)
c <- c+1
}
}
df
y
years
y <- 2002
t <- types[1]
y
t
good <- (NEI_baltimore$type==t && NEI_baltimore$year==y)
summary(good)
length(good)
NEI_baltimore$type==t
NEI_baltimore$year==y
(NEI_baltimore$type==t && NEI_baltimore$year==y)
(NEI_baltimore$type==t) && (NEI_baltimore$year==y)
(NEI_baltimore$type==t) & (NEI_baltimore$year==y)
?&&
types <- unique(NEI_baltimore$type)
years <- unique(NEI_baltimore$year)
df <- data.frame(Emissions=numeric(), type=character(), year=character(),
samples=numeric(), stringsAsFactors=FALSE)
c <- 1
for (t in types){
for (y in years){
good <- (NEI_baltimore$type==t) & (NEI_baltimore$year==y)
df[c,1] <- sum(NEI_baltimore$Emissions[good])
df[c,2] <- t
df[c,3] <- y
df[c,4] <- sum(good)
c <- c+1
}
}
df
?qplot
qplot(df)
qplot(df$Emissions)
qplot(1:16, df$Emissions)
qplot(1:16, Emissions, data=df, faces= .~ year )
qplot(1:4, Emissions, data=df, faces= .~ year )
qplot(1:16, Emissions, data=df, faces= .~ year )
df
str(df)
df$type <- as.factor(df.type)
df$type <- as.factor(df$type)
str(df)
df$year <- as.factor(df$year)
df
str(df)
qplot(1:16, Emissions, data=df, faces= .~ year )
qplot(1:16, Emissions, data=df, facets= .~ year )
qplot(1:4, Emissions, data=df, facets= .~ year )
qplot(1:16, Emissions, data=df, facets= .~ year )
qplot(1:16, Emissions, data=df, facets= .~ type )
qplot(year, Emissions, data=df, facets= .~ type )
types <- unique(NEI_baltimore$type)
years <- unique(NEI_baltimore$year)
df <- data.frame(Emissions=numeric(), type=character(), year=character(),
samples=numeric(), stringsAsFactors=FALSE)
c <- 1
for (t in types){
for (y in years){
good <- (NEI_baltimore$type==t) & (NEI_baltimore$year==y)
df[c,1] <- sum(NEI_baltimore$Emissions[good])
df[c,2] <- t
df[c,3] <- y
df[c,4] <- sum(good)
c <- c+1
}
}
qplot(year, Emissions, data=df, facets= .~ type )
qplot(year, Emissions, data=df, facets= .~ type , geom=c("point","smooth"))
# Save plot as PNG
dev.copy(png, file = "plot3.png",
width = 480,
height = 480)
dev.off()
qplot(year, Emissions, data=df, facets= .~ type ) + labs(title="my title")
qplot(year, Emissions, data=df, facets= .~ type )
+ labs(title="PM2.5 emissions in Baltimore City (tons)")
qplot(year, Emissions, data=df, facets= .~ type ) + labs(title="PM2.5 emissions in Baltimore City (tons)")
qplot(year, Emissions, data=df, facets= .~ type ) +
labs(title="PM2.5 emissions in Baltimore City (tons)")
dev.copy(png, file = "plot3.png",
width = 680,
height = 480)
dev.off()
head(SCC)
str(SCC)
unique(SCC$SCC.Level.One)
unique(SCC$SCC.Level.Two)
unique(SCC$SCC.Level.Three)
one <- unique(SCC$SCC.Level.One)
two <- unique(SCC$SCC.Level.Two)
trhee <- unique(SCC$SCC.Level.Three)
three <- unique(SCC$SCC.Level.Three)
src(SCC)
str(SCC)
four <- unique(SCC$SCC.Level.Four)
one
pmatch("Combustion", one)
class(one)
class(as.char(one))
as.character(one)
class(as.character(one))
pmatch("Combustion", as.character(one))
match("Combustion", as.character(one))
grep("Combustion", as.character(one))
grep("Kilns", as.character(one))
grep("Kilns", one
)
grep("Combustion", as.character(one))
one[1]
one[2]
one <- as.character(unique(SCC$SCC.Level.One))
two <- as.character(unique(SCC$SCC.Level.Two))
three <- as.character(unique(SCC$SCC.Level.Three))
four <- as.character(unique(SCC$SCC.Level.Four))
one[2]
one[3]
one[4]
one[grep("Combustion", One)]
one[grep("Combustion", one)]
two[grep("Combustion", two)]
three[grep("Combustion", three)]
four[grep("Combustion", four)]
str(SCC)
unique(SCC$EI.Sector)
as.character(unique(SCC$EI.Sector))
grep("Coal",as.character(unique(SCC$EI.Sector)))
as.character(unique(SCC$EI.Sector))[c(1,6,11)]
cc <- grep("Coal",as.character(SCC$EI.Sector))
cc
str(SCC)
good <- SCC$SCC[grep("Coal",as.character(SCC$EI.Sector))]
good
as.character(good)
ccr <- as.character(SCC$SCC[grep("Coal",as.character(SCC$EI.Sector))])
ccr
str(NEI)
x <- is.element(NEI$SCC,ccr)
x
summary(x)
NEI_ccr <- subset(NEI, is.element(NEI$SCC,ccr))
str(NEI_ccr)
boxplot(Emission ~ Year, NEI_ccr)
boxplot(Emissions ~ Year, NEI_ccr)
boxplot(Emissions ~ year, NEI_ccr)
plot(NEI_ccr$year, NEI_crr$Emission)
plot(NEI_ccr$year, NEI_ccr$Emission)
plot(NEI_ccr$year, log(NEI_ccr$Emission))
boxplot(Emissions ~ year, NEI_ccr)
?boxplot
boxplot(Emissions ~ year, NEI_ccr, outline=FALSE)
boxplot(log(Emissions) ~ year, NEI_ccr, outline=FALSE)
boxplot(Emissions ~ year, NEI_ccr, outline=FALSE)
boxplot(Emissions ~ year, NEI_ccr,
outline=FALSE,
xlab="year",
ylab="Emission (tons)",
main="tilte")
total <- tapply(NEI_ccr$Emissions, NEI_ccr$year, sum)
barplot(total,
main="Total PM2.5 emission from all sources",
xlab="Year",
ylab="Emission (mega tons)")
# Create plot
barplot(total,
main="Total PM2.5 emission from coal combustion-related sources",
xlab="Year",
ylab="Emission (tons)")
# Save plot as PNG
dev.copy(png, file = "plot4.png",
width = 480,
height = 480)
dev.off()
dev.copy(png, file = "plot4.png",
width = 680,
height = 480)
dev.off()
# Load libraries
library(ggplot2)
# Read data
NEI <- readRDS("summarySCC_PM25.rds")
# SCC <- readRDS("Source_Classification_Code.rds")
# Prepare data:
# subset data from Baltimore
NEI_baltimore <- subset(NEI, NEI$fips=="24510")
# Sum emissions for each type and year in new frame
types <- unique(NEI_baltimore$type)
years <- unique(NEI_baltimore$year)
df <- data.frame(Emissions=numeric(), type=character(), year=character(),
samples=numeric(), stringsAsFactors=FALSE)
c <- 1
for (t in types){
for (y in years){
good <- (NEI_baltimore$type==t) & (NEI_baltimore$year==y)
df[c,1] <- sum(NEI_baltimore$Emissions[good])
df[c,2] <- t
df[c,3] <- y
df[c,4] <- sum(good)
c <- c+1
}
}
# create plot with subplot for each type
qplot(year, Emissions, data=df, facets= .~ type ) +
labs(title="PM2.5 emissions in Baltimore City (tons)")
# Save plot as PNG
dev.copy(png, file = "plot3.png",
width = 680,
height = 480)
dev.off()
